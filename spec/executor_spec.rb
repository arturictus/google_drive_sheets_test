# frozen_string_literal: true

require "./spec/spec_helper"

RSpec.describe Gat::Executor do

  before do
    @config = Gat::Config.new
    VCR.use_cassette("executor_example_1_setup") do
      Gat::Setup.call(@config.sheet_service, @config.spreadsheet_id)
    end
    @service = @config.sheet_service
    @spreadsheet_id = @config.spreadsheet_id
  end
  it "uploads the report to Google Sheets" do
    VCR.use_cassette("executor_example_1") do
      executor = Gat::Executor.new(@service, @spreadsheet_id)

      executor.upload_to_google_sheets([%w[hello this is a test], %w[hello this is a test]])
    end

    VCR.use_cassette("executor_example_1_read") do
      lens = Gat::Lens.new(@service, @spreadsheet_id)

      inspect = lens.inspect()
      expect(inspect).to eq([{ sheet_id: 0, index: 0, title: "Sheet1", column_count: 26 },
                             { sheet_id: 144_069_098, index: 1, title: "status", column_count: 1 },
                             { sheet_id: 1_590_439_418, index: 2, title: "System export", column_count: 5 }])
      report = lens.read(Gat::Executor::REPORT_SHEET_NAME)
      expect(report).to eq([%w[hello this is a], %w[hello this is a]])
      status = lens.read("Status")
      expect(status[0][0]).to eq("THIS SPREADSHEET IS AUTOMATICALLY GENERATED BY THE SELMA SYSTEM. DO NOT MANUALLY EDIT THIS SPREADSHEET.")
      expect(status[1][0]).to match("Data uploaded successfully on")
    end
  end
end
